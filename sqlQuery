DROP DATABASE IF EXISTS `test_platform`;
CREATE DATABASE `test_platform` CHARACTER SET 'utf8' COLLATE 'utf8_general_ci';
USE `test_platform`;


-- USER TABLE
CREATE TABLE `test_platform`.`users` (
`USER_ID` int(0) NOT NULL AUTO_INCREMENT,
`FIRST_NAME` varchar(50) NOT NULL COMMENT 'Hakyky adyny yazmaly',
`SURNAME` varchar(50) NOT NULL COMMENT 'Hakyky FAMILYASY',
`E_MAIL` varchar(50) NULL,
`USER_NAME` varchar(50) NOT NULL COMMENT 'NICKNAME, ulanyjy ady yada lakamy (E: aGO, eric)',
`PASSWORD` varchar(50) NOT NULL COMMENT 'MD5 ENCYPTION',
`BIRTH_DATE` date NULL COMMENT 'DOGLAN SENESI',
`PHONE_NUMBER` varchar(25) NULL COMMENT 'TELEPHONE NUMBER',
`COUNTRY` varchar(50) NULL COMMENT 'YURDY',
`CITY` varchar(255) NULL COMMENT 'ADDRESS ',
`ACTIVE` bit(1) NOT NULL DEFAULT 0 COMMENT '0-MAIL ENTAK TASSYKLANMADY, 1-TASSYKLANDY (VE ACTIVE USER)',
`IMAGE` varchar(255) NULL COMMENT 'IMAGE NAME (AHLI SURATLAR BIZ PATHDA DINE IMAGE NAME UYTGEYAR)',
`GENDER` bit(1) NOT NULL DEFAULT 0 COMMENT '0-NOT SELECTED, 1-MALE, 2-FEMALE',
`JOB` varchar(255) NULL COMMENT 'WEZIPESI',
`BIO` text NULL COMMENT 'ABOUT HIS/HER SELFIES it is optional',
`STATUS` bit(1) NOT NULL DEFAULT 0 COMMENT '0-NOT SELECTED, 1- TEACHER, 2- STUDENT',
`VERIFY_CODE` varchar(100) NULL COMMENT 'MAIL BARLAMAK UICN, MAIL TASSYKLAMAK UCIN GOYULYAN CODE',
`CREATE_TIME` timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT 'CREATED TIME',
`ISADMIN` ENUM('0','1','2') NOT NULL DEFAULT '0' COMMENT '0-GENERAL USER, 1-MODIRATOR, 2- ADMINISTRATOR',
`EMAIL_SUBSCRIBE` bit(1) NOT NULL DEFAULT 1 COMMENT '0-NOTIFLAR UCIN MAIL BARMALY DAL, 1-NOTIFLAR UCIN MAIL BARMALY',
`GMT` VARCHAR(10) NULL COMMENT 'GMT+05:00-5 , GMT+05:30-5.5',
`LANGUAGE` VARCHAR(5) NOT NULL DEFAULT 'EN' COMMENT 'TM-TURKMENCE, RU-RUSSIAN, EN-ENGLISH',

`FIRST_NAME_A` bit(1) NOT NULL DEFAULT 1 COMMENT '1-public, 0-prived',
`SURNAME_A` bit(1) NOT NULL DEFAULT 1 COMMENT '1-public, 0-prived',
`E_MAIL_A` bit(1) NOT NULL DEFAULT 1 COMMENT '1-public, 0-prived',
`USER_NAME_A` bit(1) NOT NULL DEFAULT 1 COMMENT '1-public, 0-prived',
`BIRTH_DATE_A` bit(1) NOT NULL DEFAULT 0 COMMENT '1-public, 0-prived',
`PHONE_NUMBER_A` bit(1) NOT NULL DEFAULT 0 COMMENT '1-public, 0-prived',
`COUNTRY_A` bit(1) NOT NULL DEFAULT 1 COMMENT '1-public, 0-prived',
`CITY_A` bit(1) NOT NULL DEFAULT 0 COMMENT '1-public, 0-prived',
`IMAGE_A` bit(1) NOT NULL DEFAULT 0 COMMENT '1-public, 0-prived',
`GENDER_A` bit(1) NOT NULL DEFAULT 0 COMMENT '1-public, 0-prived',
`JOB_A` bit(1) NOT NULL DEFAULT 0 COMMENT '1-public, 0-prived',
`BIO_A` bit(1) NOT NULL DEFAULT 0 COMMENT '1-public, 0-prived',

UNIQUE INDEX `EMAIL_UNIQUE`(`E_MAIL`) COMMENT '1 EMAIL 1 GIRISH',
UNIQUE INDEX `USERNAME_UNIQUE`(`USER_NAME`) COMMENT '1 USERNAME BASHGA MENZESH BOLMALY DAL',
UNIQUE INDEX `VERIFY_CODE_UNIQUE`(`VERIFY_CODE`) COMMENT '1 VERIFY_CODE 1 GIRISH',
PRIMARY KEY (`USER_ID`)
);

INSERT INTO `test_platform`.`users`(`FIRST_NAME`, `SURNAME`, `E_MAIL`, `USER_NAME`, `BIRTH_DATE`, `PHONE_NUMBER`, `COUNTRY`, `CITY`, `ACTIVE`, `IMAGE`, `GENDER`, `JOB`, `STATUS`, `ISADMIN`,`PASSWORD`,`VERIFY_CODE`) VALUES ('Agamyrat', 'Chariyev', 'agamyrat.chariyev@gmail.com', 'aGO', '1995-09-14', '(+993) 63 384289', 'Turkmenistan', 'Ashgabat', 1, '', 1, 'System', 0, 2, '202cb962ac59075b964b07152d234b70', UUID());

INSERT INTO `test_platform`.`users`(`FIRST_NAME`, `SURNAME`, `E_MAIL`, `USER_NAME`, `BIRTH_DATE`, `PHONE_NUMBER`, `COUNTRY`, `CITY`, `ACTIVE`, `IMAGE`, `GENDER`, `JOB`, `STATUS`, `ISADMIN`,`PASSWORD`,`VERIFY_CODE`) VALUES ('Erkin', 'Erjepow', 'erejepow00@mail.ru', 'eric', '2000-06-01', '(+993) 63 545454', 'Turkmenistan', 'Ashgabat', 1, '', 1, 'System', 0, 2, '202cb962ac59075b964b07152d234b70', UUID());







-- TABLO TESTS
CREATE TABLE `test_platform`.`tests` (
`TEST_ID` int(0) NOT NULL AUTO_INCREMENT,
`TEST_NAME` varchar(200) COMMENT 'TEST ADY',
`DESCRIPTION` text COMMENT 'TEST BARADA MAGLUMAT',
`CREATED_BY` int(0) NOT NULL COMMENT 'TESTY DOREDEN ADAM',
`IS_RANDOM` bit(1) NOT NULL DEFAULT 0 COMMENT '0-SORAGLARYN YERLERINI CALYSHMASYN(NO), 1-YES',
`IS_PUBLIC` bit(1) NOT NULL DEFAULT 0 COMMENT '0-PRIVED, 1-PUBLIC',
`IS_ALLOWED` bit(1) NOT NULL DEFAULT 0 COMMENT '0-NOT ALLOWED, 1-ALLOWED (egerde is_public 1 bolsa)',
`PASSWORD` varchar(50) NULL COMMENT 'MD5 ENCRYPTION',
`TEST_IMAGE` varchar(50) NULL COMMENT 'TEST UCIN SURAT',
`LANGUAGE` varchar(30) NOT NULL COMMENT 'TESTDA ULANYLAN DIL',
`KEYWORDS` text COMMENT 'GÃ–ZLEG MAKSATLY',
STARTING_TIME datetime(0) NULL COMMENT 'TEST COZMAGE BASHLANYLYAN VAGTY',
ENDING_TIME datetime(0) NULL COMMENT 'TEST COZULUP GUTARYLMALY WAGTY',
GIVEN_TIME int(0) NOT NULL DEFAULT 60 COMMENT 'MINUT SANY',
SOLVING_COUNT int(0) NOT NULL DEFAULT 0 COMMENT 'SORAG COZENLERIN SANY',
LIKE_COUNT int(0) NOT NULL DEFAULT 0 COMMENT 'LIKE SANY',
DISLIKE_COUNT int(0) NOT NULL DEFAULT 0 COMMENT 'DISLIKE SANY',
VERSION int(0) NOT NULL DEFAULT 1,
`CREATE_TIME` timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
`LAST_UPDATE_TIME` datetime(0) NULL,

CONSTRAINT `USER_CON` FOREIGN KEY (`CREATED_BY`) REFERENCES `test_platform`.`users` (`USER_ID`) ON DELETE CASCADE ON UPDATE CASCADE,
PRIMARY KEY (`TEST_ID`)
);



CREATE TABLE `test_platform`.`questions`  (
  `QUESTIONS_ID` int(0) NOT NULL AUTO_INCREMENT,
  `TEST_ID` int(0) NOT NULL COMMENT 'TESTYN IDSY',
  `QUESTION` text NOT NULL COMMENT 'DINE SORAG',
  `QUESTION_IMAGE` text COMMENT 'QUESTION MAIN IMAGE OR IMAGES',
  `QUESTION_DATA` text NOT NULL COMMENT 'DINE JOGAPLAR',
  `ANSWERS` text NOT NULL COMMENT 'DOGRY JOGAPLAR',
  `QUESTION_TYPE` ENUM('single-choice','multi-choice','input','true-false','matching', 'blank') NOT NULL,
  `ISRANDOM` bit(1) NOT NULL DEFAULT 0 COMMENT '0- NOT RANDOM\\r\\n1- RANDOM',
  PRIMARY KEY (`QUESTIONS_ID`),
  CONSTRAINT `TEST_CON` FOREIGN KEY (`TEST_ID`) REFERENCES `test_platform`.`tests` (`TEST_ID`) ON DELETE CASCADE ON UPDATE CASCADE
);



CREATE TABLE `test_platform`.`test_feedback` (
`FEEDBACK_ID` int(0) NOT NULL AUTO_INCREMENT,
`TEST_ID` int(0) NOT NULL COMMENT 'TEST IDSY',
`USER_ID` int(0) NOT NULL COMMENT 'FEEDBACK YAZAN ADAMYN IDSY',
`DESCRIPTION` varchar(255) NULL COMMENT 'TEST BARADA GYSGACA MAGLUMAT',
`CREATE_TIME` timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT 'FEEDBACK GALDYRYLAN VAGT',
`LIKES` bit(1) NOT NULL DEFAULT 0 COMMENT '0- LIKE BASMADY, 1 - LIKE BASDY',
`DISLIKE` bit(1) NOT NULL DEFAULT 0 COMMENT '0- DISLIKE BASMADY, 1 -DISLIKE BASDY',
`ACTIVE` bit(1) NOT NULL DEFAULT 1 COMMENT '0 - ULANYSHA GOYBERME, 1- ULANYSHA GOYBER',
CONSTRAINT `TEST_ID` FOREIGN KEY (`TEST_ID`) REFERENCES `test_platform`.`tests` (`TEST_ID`) ON DELETE CASCADE,
PRIMARY KEY (`FEEDBACK_ID`)
);




CREATE TABLE `test_platform`.`mails`  (
  `MAIL_ID` int(0) NOT NULL AUTO_INCREMENT,
  `USERNAME` varchar(255) NOT NULL COMMENT 'MAIL YAZYANYN ADY',
  `EMAIL` varchar(255) NOT NULL COMMENT 'MAIL ADRESSY',
  `MAIL_TEXT` text NOT NULL COMMENT 'YAZAN MAILY',
  `CREATE_TIME` timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT 'MAIL ATYLAN VAGTY',
  `ACTIVE` bit(1) NULL COMMENT '1- MODERATOR OKAMADY, 0 - OKALDY',
  PRIMARY KEY (`MAIL_ID`)
);


-- TEST TRIGGERS
DELIMITER $$
CREATE TRIGGER AFTER_TEST_UPDATE BEFORE UPDATE
ON tests
FOR EACH ROW
BEGIN
	IF OLD.GIVEN_TIME <> new.GIVEN_TIME THEN
        SET NEW.VERSION = OLD.VERSION + 1;
        SET NEW.LAST_UPDATE_TIME = NOW();
  END IF;
END;$$ 
DELIMITER;


-- QUERSION TRIGGERS
DELIMITER $$
CREATE TRIGGER AFTER_QUESTION_UPDATE AFTER UPDATE ON questions
FOR EACH ROW
BEGIN
	UPDATE tests SET tests.VERSION = tests.VERSION + 1, tests.LAST_UPDATE_TIME = NOW() WHERE tests.TEST_ID = NEW.TEST_ID;
END;$$ 
DELIMITER;

DELIMITER $$
CREATE TRIGGER AFTER_QUESTION_DELETE AFTER DELETE ON questions
FOR EACH ROW
BEGIN
	UPDATE tests SET tests.VERSION = tests.VERSION + 1, tests.LAST_UPDATE_TIME = NOW() WHERE tests.TEST_ID = OLD.TEST_ID;
END;$$ 
DELIMITER;

DELIMITER $$
CREATE TRIGGER AFTER_QUESTION_INSERT AFTER INSERT ON questions
FOR EACH ROW
BEGIN
	UPDATE tests SET tests.VERSION = tests.VERSION + 1, tests.LAST_UPDATE_TIME = NOW() WHERE tests.TEST_ID = NEW.TEST_ID;
END;$$ 
DELIMITER;

-- FEEDBACK TRIGGER
DELIMITER $$
CREATE TRIGGER AFTER_FEEDBACK_INSERT AFTER INSERT ON test_feedback
FOR EACH ROW
BEGIN
  IF NEW.LIKES = 1 THEN 
	UPDATE tests SET LIKE_COUNT = LIKE_COUNT + 1 WHERE tests.TEST_ID = NEW.TEST_ID;

  ELSEIF NEW.DISLIKE = 1 THEN
  UPDATE tests SET DISLIKE_COUNT = DISLIKE_COUNT + 1 WHERE tests.TEST_ID = NEW.TEST_ID;
  END IF;
END;$$ 
DELIMITER;

DELIMITER $$
CREATE TRIGGER AFTER_FEEDBACK_UPDATE AFTER UPDATE ON test_feedback
FOR EACH ROW
BEGIN
  IF OLD.LIKES = 1 THEN 
	UPDATE tests SET LIKE_COUNT = LIKE_COUNT - 1 WHERE tests.TEST_ID = NEW.TEST_ID;

  ELSEIF OLD.DISLIKE = 1 THEN
  UPDATE tests SET DISLIKE_COUNT = DISLIKE_COUNT - 1 WHERE tests.TEST_ID = NEW.TEST_ID;
  END IF;

  IF NEW.LIKES = 1 THEN 
	UPDATE tests SET LIKE_COUNT = LIKE_COUNT + 1 WHERE tests.TEST_ID = NEW.TEST_ID;

  ELSEIF NEW.DISLIKE = 1 THEN
  UPDATE tests SET DISLIKE_COUNT = DISLIKE_COUNT + 1 WHERE tests.TEST_ID = NEW.TEST_ID;
  END IF;
END;$$ 
DELIMITER;


DELIMITER $$
CREATE TRIGGER AFTER_FEEDBACK_DELETE AFTER DELETE ON test_feedback
FOR EACH ROW
BEGIN
  IF OLD.LIKES = 1 THEN 
	UPDATE tests SET LIKE_COUNT = LIKE_COUNT - 1 WHERE tests.TEST_ID = OLD.TEST_ID;

  ELSEIF OLD.DISLIKE = 1 THEN
  UPDATE tests SET DISLIKE_COUNT = DISLIKE_COUNT - 1 WHERE tests.TEST_ID = OLD.TEST_ID;
  END IF;

END;$$ 
DELIMITER;
